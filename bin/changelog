#!/usr/bin/env ruby

require "github_changelog_generator"
require "yaml"

#module GitHubChangelogGenerator
#  class Generator
#    def compound_changelog
#      fetch_and_filter_tags
#      sort_tags_by_date(@filtered_tags)
#      fetch_issues_and_pr
#
#      if @options[:unreleased_only]
#        log += generate_log_between_tags(filtered_tags[0], nil)
#      else
#        log += generate_log_for_all_tags
#      end
#
#      log += File.read(@options[:base]) if File.file?(@options[:base])
#
#      log += "\n\n*This Change Log was automatically generated by a monkey-patched [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*"
#      @log = log
#    end
#
#    def generate_log_for_all_tags
#      puts "Generating log..." if @options[:verbose]
#
#      log = generate_unreleased_section
#
#			_numeric_tags = filtered_tags.select{|tag| tag.name =~ /^[\.0-9]+$/ }
#
#      _unfiltered_changelog = (1..._numeric_tags.size).collect{|index|
#        from = _numeric_tags[index]
#        to = _numeric_tags[index - 1]
#        OpenStruct.new(from: from, to: to, activity: generate_log_between_tags(from, to))
#      }
#
#      while _unfiltered_changelog.size > 0 && !_unfiltered_changelog[0].activity.index('**')
#        _unfiltered_changelog.shift
#      end
#
#      _changelog = []
#      _unfiltered_changelog.each{|entry|
#        if entry.activity.index('**')
#          _changelog.push(entry)
#        else
#          _changelog[-1].from = entry.from
#          _changelog[-1].activity = nil
#        end
#      }
#
#      _changelog.each{|entry|
#        entry.activity = generate_log_between_tags(entry.from, entry.to) if !entry.activity
#			}
#     
#      return _changelog.collect{|entry| entry.activity.gsub("\\\\#", '\\#') }.join('')
#    end
#  end
#end

module GitHubChangelogGenerator
  class ChangelogGenerator
    attr_accessor :options
  end
end

gcg = GitHubChangelogGenerator::ChangelogGenerator.new
gcg.options[:user] = 'retorquere'
gcg.options[:project] = 'zotero-better-bibtex'
gcg.options[:output] = 'wiki/Changelog.md'
gcg.options[:exclude_tags] = ['builds', 'update.rdf', 'travis', 'current', 'test-profiles']
gcg.run
